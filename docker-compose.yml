services:
  ros2-bridge:
    platform: linux/arm64
    build: ./ros2-bridge
    container_name: ros2-bridge
    ports:
      - "8081:8081"
    environment:
      - ROS_DOMAIN_ID=42
    command: ["python3", "app.py"]
    depends_on:
      - ros2-telemetry

  ros2-telemetry:
    platform: linux/arm64
    image: ros:humble-ros-core
    container_name: ros2-telemetry
    environment:
      - ROS_DOMAIN_ID=42
    volumes:
      - ./ros2-telemetry/telemetry_gen.py:/telemetry_gen.py:ro
    command: bash -lc "apt-get update && apt-get install -y python3-pip && pip3 install --no-cache-dir rclpy std_msgs && python3 /telemetry_gen.py"

  mediamtx:
    platform: linux/arm64
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    ports:
      - "8554:8554" # RTSP
      - "8889:8889" # WebRTC/HTTP UI
      - "8888:8888" # HLS (optional)
      - "8189:8189/udp" # WebRTC ICE UDP
      - "8189:8189/tcp" # WebRTC ICE TCP
      - "9997:9997" # API (HTTP)
    volumes:
      - ./video/mediamtx.yml:/mediamtx.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9997/v3/paths/list"]
      interval: 5s
      timeout: 2s
      retries: 12

  ffmpeg-publisher:
    platform: linux/arm64
    image: ghcr.io/linuxserver/ffmpeg:latest
    container_name: ffmpeg-publisher
    depends_on:
      mediamtx:
        condition: service_started
    entrypoint: ["ffmpeg"]
    command: >
      -hide_banner -loglevel info -re
      -f lavfi -i testsrc=size=640x360:rate=30
      -f lavfi -i sine=frequency=1000:sample_rate=44100
      -c:v libx264 -preset veryfast -tune zerolatency -pix_fmt yuv420p
      -c:a aac
      -rtsp_transport tcp
      -f rtsp rtsp://mediamtx:8554/cam
    restart: unless-stopped

  backend-node:
    platform: linux/arm64
    build: ./backend-node
    container_name: backend-node
    ports:
      - "8080:8080"
    environment:
      - ROS2_BRIDGE_URL=http://ros2-bridge:8081
      - NODE_ENV=development
    volumes:
      - ./backend-node:/usr/src/app:rw
    command: ["npm", "run", "dev"]
    depends_on:
      - ros2-bridge

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8082:80"
    depends_on:
      - backend-node
